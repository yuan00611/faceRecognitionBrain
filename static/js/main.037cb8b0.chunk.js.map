{"version":3,"sources":["components/Logo/Logo.js","components/Rank/Rank.js","components/SignIn/SignIn.js","components/Navigation/Navigation.js","components/Registration/Registration.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js","components/Logo/brain.png"],"names":["Logo","className","options","max","style","height","width","alt","src","brain","Rank","name","entries","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","onRouteChange","this","htmlFor","type","onChange","onClick","React","Component","Navigation","isSignedIn","display","justifyContent","Registration","onNameChange","registrationName","registrationEmail","registrationPassword","onSubmitRegistration","ImageLinkForm","onInputChange","onButtonSubmit","FaceRecognition","imageUrl","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","particlesOptions","particles","number","density","enable","value_area","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","console","log","count","Object","assign","catch","err","params","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.037cb8b0.chunk.js","sourcesContent":["import React from 'react';\nimport Tilt from 'react-tilt';\nimport './Logo.css';\nimport brain from './brain.png';\n\nconst Logo = () => {\n\treturn(\n\t\t<div className='ma4 mt0'>\n\t\t\t<Tilt className='Tilt shadow-2' options={{ max: 55}} style={{ height: 130, width: 130 }} >\n\t\t\t\t<div className=\"Tilt-inner\">\n\t\t\t\t\t<img className=\"center pa2 pt3\" alt='logo' src={brain} style={{ height: 100, width: 100 }} />\n\t\t\t\t</div>\n\t\t\t</Tilt>\n\t\t</div>\n\t);\n}\n\nexport default Logo;","import React from 'react';\n\nconst Rank = ( {name, entries }) => {\n\treturn(\n\t\t<div>\n\t\t\t<div className='white f3'>\n\t\t\t\t{ `${ name } , your current entry count is...`}\n\t\t\t</div>\n\t\t\t<div className='white f1'>\n\t\t\t\t{entries}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Rank;","import React from 'react';\n\n\nclass SignIn extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsignInEmail: '',\n\t\t\tsignInPassword: ''\n\t\t}\n\t}\n\n\tonEmailChange = (event) => {\n\t\tthis.setState({signInEmail: event.target.value})\n\t}\n\n\tonPasswordChange = (event) => {\n\t\tthis.setState({signInPassword: event.target.value})\n\t}\n\n\tonSubmitSignIn = () => {\n\t\tfetch('https://cryptic-temple-03549.herokuapp.com/signin', {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\temail: this.state.signInEmail,\n\t\t\t\tpassword: this.state.signInPassword\n\t\t\t})\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(user => {\n\t\t\t\tif (user.id) {\n\t\t\t\t\tthis.props.loadUser(user);\n\t\t\t\t\tthis.props.onRouteChange('home');\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\trender(){\n\t\tconst { onRouteChange } = this.props;\n\t\treturn(\n\t\t\t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n\t\t\t\t<main className=\"pa4 black-80\">\n\t\t\t\t  <div className=\"measure\">\n\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n\t\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n\t\t\t\t      <div className=\"mt3\">\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n\t\t\t\t        <input \n\t\t\t\t\t        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\t\t        type=\"email\" \n\t\t\t\t\t        name=\"email-address\"  \n\t\t\t\t\t        id=\"email-address\" \n\t\t\t\t\t        onChange={this.onEmailChange}\n\t\t\t\t\t    />\n\t\t\t\t      </div>\n\t\t\t\t      <div className=\"mv3\">\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n\t\t\t\t        <input \n\t\t\t\t\t        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\t\t        type=\"password\" \n\t\t\t\t\t        name=\"password\"  \n\t\t\t\t\t        id=\"password\" \n\t\t\t\t\t        onChange={this.onPasswordChange}\n\t\t\t\t\t    />\n\t\t\t\t      </div>\n\t\t\t\t    </fieldset>\n\t\t\t\t    <div className=\"\">\n\t\t\t\t      \t<input \n\t\t\t\t\t      onClick={this.onSubmitSignIn} \n\t\t\t\t\t      className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n\t\t\t\t\t      type=\"submit\" \n\t\t\t\t\t      value=\"Sign in\" \n\t\t\t\t      \t/>\n\t\t\t\t    </div>\n\t\t\t\t    <div className=\"lh-copy mt3\">\n\t\t\t\t      <p onClick={() => onRouteChange('registration')} className=\"f6 link dim black db pointer\">Register Here</p>\n\t\t\t\t    </div>\n\t\t\t\t  </div>\n\t\t\t\t</main>\n\t\t\t</article>\n\t\t);\n\t}\n}\n\nexport default SignIn;","import React from 'react';\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n\tif (isSignedIn){\n\t\treturn(\n\t\t\t<nav style={{ display: 'flex', justifyContent:'flex-end' }}>\n\t\t\t\t<p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\n\t\t\t</nav>\n\t\t);\n\t}else {\n\t\treturn(\n\t\t\t<nav style={{ display: 'flex', justifyContent:'flex-end' }}>\n\t\t\t\t<p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\n\t\t\t\t<p onClick={() => onRouteChange('registration')} className='f3 link dim black underline pa3 pointer'>Register</p>\n\t\t\t</nav>\n\t\t);\n\t}\n\t\n}\n\nexport default Navigation;","import React from 'react';\n\nclass Registration extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tregistrationName: '',\n\t\t\tregistrationEmail: '',\n\t\t\tregistrationPassword: ''\n\t\t}\n\t}\n\n\tonNameChange = (event) => {\n\t\tthis.setState({registrationName: event.target.value})\n\t} \n\n\tonEmailChange = (event) => {\n\t\tthis.setState({registrationEmail: event.target.value})\n\t}\n\n\tonPasswordChange = (event) => {\n\t\tthis.setState({registrationPassword: event.target.value})\n\t}\n\n\tonSubmitRegistration = () => {\n\t\tfetch('https://cryptic-temple-03549.herokuapp.com/register', {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname: this.state.registrationName,\n\t\t\t\temail: this.state.registrationEmail,\n\t\t\t\tpassword: this.state.registrationPassword\n\t\t\t})\n\t\t})\n\t\t\t.then(response => response.json())\t\n\t\t\t.then(user => {\n\t\t\t\tif(user.id) {\n\t\t\t\t\tthis.props.loadUser(user);\n\t\t\t\t\tthis.props.onRouteChange('home')\n\t\t\t\t}\n\t\t\t})\n\t\t\n\t}\n\n\t\n\trender(){\n\t\treturn(\n\t\t\t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n\t\t\t\t<main className=\"pa4 black-80\">\n\t\t\t\t  <div className=\"measure\">\n\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n\t\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n\t\t\t\t      <div className=\"mt3\">\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n\t\t\t\t        <input \n\t\t\t\t\t        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\t\t        type=\"text\" \n\t\t\t\t\t        name=\"name\"  \n\t\t\t\t\t        id=\"name\" \n\t\t\t\t\t        onChange={this.onNameChange}\n\t\t\t\t        />\n\t\t\t\t      </div>\n\t\t\t\t      <div className=\"mt3\">\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n\t\t\t\t        <input \n\t\t\t\t\t        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\t\t        type=\"email\" \n\t\t\t\t\t        name=\"email-address\"  \n\t\t\t\t\t        id=\"email-address\" \n\t\t\t\t\t        onChange={this.onEmailChange}\n\t\t\t\t        />\n\t\t\t\t      </div>\n\t\t\t\t      <div className=\"mv3\">\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n\t\t\t\t        <input \n\t\t\t\t\t        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\t\t        type=\"password\" \n\t\t\t\t\t        name=\"password\"  \n\t\t\t\t\t        id=\"password\" \n\t\t\t\t\t        onChange={this.onPasswordChange}\n\t\t\t\t        />\n\t\t\t\t      </div>\n\t\t\t\t    </fieldset>\n\t\t\t\t    <div className=\"\">\n\t\t\t\t      <input onClick={this.onSubmitRegistration} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\" />\n\t\t\t\t    </div>\n\t\t\t\t  </div>\n\t\t\t\t</main>\n\t\t\t</article>\n\t\t);\n\t}\n\t\n}\n\nexport default Registration;","import React from 'react';\nimport './ImageLinkForm.css';\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\n\treturn(\n\t\t<div>\n\t\t\t<p className='f3'>\n\t\t\t\t{'This Magic Brain will detect faces in your pictures. Get it a try!'}\n\t\t\t</p>\n\t\t\t<div className='center'>\n\t\t\t\t<div className='pa4 br3 shadow-5 center form'>\n\t\t\t\t\t<input className='f4 pa2 w-70 center' type='text' onChange={onInputChange} />\n\t\t\t\t\t<button className='w-30 grow f4 link ph3 pv2 dib white bg-blue' onClick={onButtonSubmit} >Detect</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ImageLinkForm;","import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({ imageUrl, box }) => {\n\treturn(\n\t\t<div className='center ma'>\n\t\t\t<div className='absolute mt2'>\n\t\t\t\t<img id='inputimage' alt='' src= {imageUrl} width='500px' height='auto' />\n\t\t\t\t<div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left:box.leftCol }} ></div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default FaceRecognition;","import React from 'react';\nimport 'tachyons';\nimport Particles from 'react-particles-js';\n\nimport './App.css';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport SignIn from './components/SignIn/SignIn';\nimport Navigation from './components/Navigation/Navigation';\nimport Registration from './components/Registration/Registration';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\n\nconst particlesOptions = {\n  particles: {\n    number:{\n      value: 60,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }   \n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col *  width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n      fetch('https://cryptic-temple-03549.herokuapp.com/imageurl', {\n        method: 'post',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch('https://cryptic-temple-03549.herokuapp.com/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n          .then(response => response.json())\n          .then(count => {\n            this.setState(Object.assign(this.state.user, {entries: count}))\n          })\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if(route === 'signout'){\n      this.setState(initialState)\n    }else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Particles className='particles' params={particlesOptions} />\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange} />\n        \n        { this.state.route === 'home'\n          ? <div>\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries} />\n              <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\n              <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl} />\n            </div>\n          : (\n            this.state.route === 'signin'\n            ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n            : <Registration loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n          )\n        }\n      </div>\n    )\n  };\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.a415a39c.png\";"],"sourceRoot":""}